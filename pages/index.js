import Head from "next/head";
import Nav from "../components/Nav";
import React, { useEffect, useState } from "react";
import { SearchIcon } from "@heroicons/react/outline";
import Image from "next/image";
import Country from "../components/Country";
/* import { LazyLoadImage } from "react-lazy-load-image-component"; */
import Link from "next/link";
import { useRouter } from "next/router";
import Select from "react-select";

/* https://www.youtube.com/watch?v=iW39Merz0zE */
const url = "https://restcountries.com/v3.1/all";
export async function getServerSideProps() {
  const res = await fetch(url);
  const data = await res.json();
  return {
    props: {
      data,
    },
  };
}

export default function Home({ data }) {
  console.log("data", data);
  const router = useRouter();

  const [areaSelected, setAreaSelected] = useState("");
  const [searchText, setSearchText] = useState("");
  const [countries, setCountries] = useState([]);
  const options = [
    { label: "All", value: "All" },
    { label: "Africa", value: "Africa" },
    { label: "Americas", value: "America" },
    { label: "Asia", value: "Asia" },
    { label: "Europe", value: "Europe" },
    { label: "Oceania", value: "Oceania" },
  ];
  const [region, setRegion] = useState(options[0]);
  const [widthState, setWidthState] = useState(null);

  console.log(data);

  useEffect(() => {
    setWidthState(window.innerWidth);
    function handleResize() {
      setWidthState(window.innerWidth);
    }
    window.addEventListener("resize", handleResize);
    return (_) => {
      window.removeEventListener("resize", handleResize);
    };
  });

  const onchangeSelect = (item) => {
    setRegion(item);
    console.log(region.label);
  };

  const customStyles = {
    option: (provided, state) => ({
      ...provided,
      color: "white",
      backgroundColor: state.isSelected ? "#202C37" : "#333E48",
    }),
    control: (provided) => ({
      ...provided,
      /*  marginTop: "5%", */
      /* backgroundColor: "#90B5FE", */
      backgroundColor: "#333E48",
      border: "none",
      borderOutline: "none",
      paddingTop: "5px",
      paddingBottom: "5px",
    }),
    menu: (provided) => ({
      ...provided,
      height: "100%",
      backgroundColor: "#333E48",
    }),
    singleValue: () => ({
      color: "white",
    }),
  };

  return (
    <div className="font-mainFont">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Nav */}
      <Nav />
      {/* MainPage */}
      {/* <MainPage /> */}
      <div className="px-5 flex flex-col items-center h-screen overflow-y-auto pt-28 bg-mainDark text-white">
        {/* div for (inner)body */}
        {/* Mobile/Smaller size */}
        {widthState <= 659 ? (
          <div className="flex flex-col w-full items-center">
            {/* FORM */}
            <form
              onSubmit={(e) => handleForm(e)}
              className="flex mb-8 flex-row items-center h-12 w-80 py-6  bg-mainDarkGrayish border-4 border-borderColor rounded-lg"
            >
              <SearchIcon className="h-5 w-5 ml-8 cursor-pointer" />
              <input
                value={searchText}
                onChange={(e) => setSearchText(e.target.value)}
                type="text"
                className="font-medium text-sm  w-full flex-grow pl-8 outline-none bg-mainDarkGrayish"
                placeholder="Search for a country..."
              />
            </form>
            {/* FILTER */}
            {/* same w as form container */}
            <div className="w-80 mb-8">
              <Select
                className="w-1/2 "
                placeholder="Filter by region"
                styles={customStyles}
                value={region}
                onChange={onchangeSelect}
                options={options}
                getOptionValue={(option) => option.value}
                getOptionLabel={(option) => option.value}
              />
            </div>

            <div className="flex flex-col ">
              {region.label === "All"
                ? data.map((item, i) => <Country key={i} item={item} />)
                : data
                    .filter((item) => item.region === region.label)
                    .map((__item, i) => <Country key={i} item={__item} />)}
            </div>
          </div>
        ) : (
          /* LARGER sizes: */ <div className="flex flex-col w-full">
            {/* DIV for SEARCH plus FILTER (desktop)  */}
            <div className="flex flex-row justify-between mb-5 items-center md:mx-8 lg:mx-10 mx-5">
              <form
                onSubmit={(e) => handleForm(e)}
                className="flex flex-row items-center h-12 w-80 py-4  bg-mainDarkGrayish border-4 border-borderColor rounded-lg"
              >
                <SearchIcon className="h-5 w-5 ml-8 cursor-pointer" />
                <input
                  value={searchText}
                  onChange={(e) => setSearchText(e.target.value)}
                  type="text"
                  className="font-medium text-sm  w-full flex-grow pl-8 outline-none bg-mainDarkGrayish"
                  placeholder="Search for a country..."
                />
              </form>
              <div className="w-40">
                <Select
                  className="w-full"
                  placeholder="Filter by region"
                  styles={customStyles}
                  value={region}
                  onChange={onchangeSelect}
                  options={options}
                  getOptionValue={(option) => option.value}
                  getOptionLabel={(option) => option.value}
                />
              </div>
            </div>
            <div className="flex flex-wrap justify-center ">
              {region.label === "All"
                ? data.map((item, i) => <Country key={i} item={item} />)
                : data
                    .filter((item) => item.region === region.label)
                    .map((__item, i) => <Country key={i} item={__item} />)}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
